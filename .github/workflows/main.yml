name: flesk-to-amazon
env:
  EB_PACKAGE_S3_BUCKET_NAME: "toha-github-actions-test"
  EB_APPLICATION_NAME: "github-actions-test"
  EB_ENVIRONMENT: "flesk-env"
  DEPLOY_PACKAGE_NAME: "flask-app-${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-central-1"

on:
  push:
    branches: [ main ]

jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
    
    - name: Git clone our repo
      uses: actions/checkout@v2
    
    - name: Create zip deployment package
      run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}

    - name: Copy deployment package to S3 backet
      run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}

    - name: Print happy message
      run: echo "CI pipline finished successfuly"
  
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}

    - name: Create new elasticbeanstalk application
      run: |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "ver-${{ github.sha }}" \
        --description "ComminSHA-${{ github.sha }}"

    - name: Deploy new version elasticbeanstalk application
      run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT }} --version-label "ver-${{ github.sha }}"

    - name: Print happy message
      run: echo "CD pipline finished successfuly"